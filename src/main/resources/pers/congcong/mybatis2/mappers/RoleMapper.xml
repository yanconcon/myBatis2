<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.congcong.myBatis2.mappers.RoleMapper">
    <cache
        eviction="FIFO"
        flushInterval="60000"
        size="512"
        readOnly="false"/>

    <resultMap id="roleMap" type="pers.congcong.myBatis2.pojos.SysRole">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        <result column="enabled" jdbcType="INTEGER" property="enabled" />
        <result column="create_by" jdbcType="BIGINT" property="createBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>

    <resultMap id="rolePrivilegeListMap" type="pers.congcong.myBatis2.pojos.SysRole" extends="roleMap">
        <collection property="privileges" columnPrefix="privilege_"
                    resultMap="pers.congcong.myBatis2.mappers.PrivilegeMapper.privilegeMap"/>
    </resultMap>

    <select id="selectById" resultMap="roleMap">
        select id, role_name RoleName, enabled, create_by createBy, create_time createTime
        from sys_role
        where id = #{id}

    </select>
    <select id="selectAll" resultMap="roleMap">
        SELECT * FROM sys_role
    </select>

    <insert id="insert">
        insert into sys_role(role_name, enabled, create_by, create_time)
        values(#{id}, #{roleName}, #{enabled}, #{createBy}, #{createTime, jdbcType = TIMESTAMP})
    </insert>

    <!--返回自增值主键-->
    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_role(role_name, enabled, create_by, create_time)
        values(#{roleName}, #{enabled}, #{createBy}, #{createTime, jdbcType = TIMESTAMP})
    </insert>



    <update id="updateById">
        update sys_role
        set
        role_name = #{sysRole.roleName},
        create_by = #{sysRole.createBy},
        enabled = #{sysRole.enabled},
        create_time = #{sysRole.createTime, jdbcType = TIMESTAMP}
        where
        id = #{sysRole.id}
    </update>


    <select id="selectAllRoleAndPrivilege" resultMap="rolePrivilegeListMap">
        SELECT
            r.id,
            r.role_name,
            r.enabled,
            r.create_time,
            p.id privilege_id,
            p.privilege_name privilege_privilege_name,
            p.privilege_url privilege_privilege_url
          FROM sys_role r
          INNER JOIN sys_role_privilege rp on rp.role_id = r.id
          INNER JOIN sys_privilege p on p.id = rp.privilege_id
    </select>

    <resultMap id="rolePrivilegeListMapSelect" extends="roleMap" type="pers.congcong.myBatis2.pojos.SysRole">
        <collection property="privileges" fetchType="lazy" column="{roleId=id}" select="pers.congcong.myBatis2.mappers.PrivilegeMapper.selectPrivilegeByRoleId"/>
    </resultMap>

    <select id="selectRoleByUserId" resultMap="rolePrivilegeListMapSelect">
        SELECT
          r.id,
          r.role_name,
          r.enabled,
          r.create_time,
          r.create_by
        FROM sys_role r
        INNER JOIN sys_user_role ur ON ur.role_id = r.id
        WHERE ur.user_id = #{userId}
    </select>

    <resultMap id="rolePrivilegeListMapChoose" type="pers.congcong.myBatis2.pojos.SysRole">
        <discriminator column="enabled" javaType="int">
            <case value="1" resultMap="rolePrivilegeListMapSelect"></case>
            <case value="0" resultMap="roleMap"></case>
            <!--使用resultType可以限定字段，但是麻烦一点-->
            <!--<case value="2" resultType="pers.congcong.myBatis2.pojos.SysRole">-->
                <!--<id property="id" column="id"/>-->
                <!--<result property="roleName" column="role_name"/>-->
            <!--</case>-->
        </discriminator>
    </resultMap>

    <select id="selectRoleByUserIdChoose" resultMap="rolePrivilegeListMapChoose">
        SELECT
            r.id,
            r.role_name,
            r.enabled,
            r.create_by,
            r.create_time
            FROM sys_role r
            INNER JOIN sys_user_role ur ON ur.role_id = r.id
            WHERE ur.user_id = #{userId}
    </select>
</mapper>