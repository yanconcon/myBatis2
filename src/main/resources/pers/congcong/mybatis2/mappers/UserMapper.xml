<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--用namespace跟userMapper关联的-->
<mapper namespace="pers.congcong.myBatis2.mappers.UserMapper">
    <resultMap id="userMap" type="pers.congcong.myBatis2.pojos.SysUser">
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="userRoleMap" extends="userMap" type="pers.congcong.myBatis2.pojos.SysUser">
        <association property="sysRole" columnPrefix="role_" resultMap="pers.congcong.myBatis2.mappers.RoleMapper.roleMap" />
    </resultMap>
    
    <resultMap id="userRoleListMap" extends="userMap" type="pers.congcong.myBatis2.pojos.SysUser">
        <collection property="sysRoleList" columnPrefix="role_" resultMap="pers.congcong.myBatis2.mappers.RoleMapper.rolePrivilegeListMap"/>
    </resultMap>

    <resultMap id="userRoleMapSelect" type="pers.congcong.myBatis2.pojos.SysUser" extends="userMap">
        <association property="sysRole" fetchType="lazy" column="{id = role_id}" select="pers.congcong.myBatis2.mappers.RoleMapper.selectById"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        SELECT * FROM sys_user WHERE id = #{id}
    </select>
    <!--全部-->
    <select id="selectAll" resultType="pers.congcong.myBatis2.pojos.SysUser">
        SELECT id,
            user_name userName,
            user_password userPassword,
            user_email userEmail,
            user_info userInfo,
            head_img headImg,
            create_time createTime
            from sys_user
    </select>


    <select id="selectRoleByUserId" resultType="pers.congcong.myBatis2.pojos.SysRole">
        SELECT
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime,
            u.user_name AS "user.userName",
            u.user_email AS "user.userEmail"
        FROM sys_user u
        INNER JOIN sys_user_role ur ON u.id = ur.user_id
        INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{userId}
    </select>

    <insert id="insert">
        INSERT INTO sys_user(
        id, user_name, user_password, user_email, user_info, head_img, create_time
        )
        VALUES (
                #{id}, #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg, jdbcType= BLOB}, #{createTime, jdbcType= DATE}
        )
    </insert>
    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert INTO sys_user(
            user_name, user_password,
            <if test="userEmail != null and userEmail != ''">
                user_email,
            </if>  user_info, head_img, create_time
        )
        VALUES (
            #{userName}, #{userPassword},
        <if test="userEmail != null and userEmail != ''">
        #{userEmail},
        </if>
         #{userInfo}, #{headImg, jdbcType= BLOB}, #{createTime, jdbcType= DATE}
        )
    </insert>

    <insert id="insert3">
        insert INTO sys_user(
            user_name, user_password, user_email, user_info, head_img, create_time
        )
        VALUES (
            #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg, jdbcType= BLOB}, #{createTime, jdbcType= DATE}
        )
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <delete id="deleteById">
        DELETE  FROM sys_user WHERE id = #{id}
    </delete>

    <select id="selectRolesByUserIdAndRoleEnabled"  resultType="pers.congcong.myBatis2.pojos.SysRole">
        SELECT
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        FROM sys_user u
            INNER JOIN sys_user_role ur ON u.id = ur.user_id
            INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{userId} AND r.enabled = #{enabled}
    </select>

    <select id="selectByUser" resultType="pers.congcong.myBatis2.pojos.SysUser">
        SELECT id,
            user_name userName,
            user_password userPassward,
            user_email userEmail,
            user_info userInfo,
            head_img headImg,
            create_time createTime
        FROM sys_user
        <where>
        <if test="userName != null and userEmail != ''">
            AND user_name LIKE concat('%', #{userName}, '%')
        </if>
        <if test="userEmail != null and userEmail != ''">
            AND user_email = #{userEmail}
        </if>
        </where>
    </select>
    
    <update id="updateByIdSelective">
        UPDATE sys_user
        <set>
            <if test="userName != null and userName !='' ">
                user_name = #{userName},
            </if>
            <if test="userPassword != null and userPassword != '' ">
                user_password = #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != '' ">
                user_email = #{userEmail},
            </if>
            <if test="userInfo != null and userInfo != '' ">
                user_info = #{userInfo},
            </if>
            <if test="headImg != null">
                head_img = #{headImg, jdbcType=BLOB},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            id = #{id},
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateById">
        UPDATE sys_user
        SET user_name = #{userName},
        user_password = #{userPassword},
        user_email = #{userEmail},
        user_info = #{userInfo},
        head_img = #{headImg, jdbcType= BLOB},
        create_time = #{createTime,  jdbcType= DATE}
        WHERE id = #{id}
    </update>

    <select id="selectByIdOrUserName" resultType="pers.congcong.myBatis2.pojos.SysUser">
        SELECT id,
            user_name userName,
            user_password userPassword,
            user_email userEmail,
            user_info userInfo,
            head_img headImg,
            create_time createTime
        from sys_user
        WHERE 1=1
        <choose>
            <when test="id != null">
                AND id = #{id}
            </when>
            <when test="userName != null and userName != ''">
                AND user_name = #{userName}
            </when>
            <otherwise>
                and 1 = 2
            </otherwise>
        </choose>
    </select>

    <select id="selectByIdList" resultType="pers.congcong.myBatis2.pojos.SysUser">
        SELECT id,
            user_name userName,
            user_password userPassword,
            user_email userEmail,
            user_info userInfo,
            head_img headImg,
            create_time createTime
        FROM sys_user
        WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
            #{id}
        </foreach>
    </select>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(
            user_name, user_password, user_email, user_info, head_img, create_time
        )
        VALUES
       <foreach collection="list" item="user" separator=",">
           (
           #{user.userName}, #{user.userPassword}, #{user.userEmail}, #{user.userInfo}, #{user.headImg, jdbcType= BLOB},
           #{user.createTime, jdbcType= DATE}
           )
       </foreach>
    </insert>

    <update id="updateByMap">
        UPDATE sys_user
        SET
            <foreach collection="_parameter" item="val" index="key" separator=",">
                ${key} = #{val}
            </foreach>
        WHERE id = #{id}
    </update>

    <select id="selectUserAndRoleById" resultMap="userRoleMap">
        SELECT
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            r.id "role_id",
            r.role_name "role_role_name",
            r.enabled "role_enabled",
            r.create_by "role_create_by",
            r.create_time "role_create_time"
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
        SELECT
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            ur.role_id
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        WHERE u.id = #{id}
    </select>
    
    <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
        SELECT
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            r.id "role_id",
            r.role_name "role_role_name",
            r.enabled "role_enabled",
            r.create_by "role_create_by",
            r.create_time "role_create_time",
            p.id role_privilege_id,
            p.privilege_name role_privilege_privilege_name,
            p.privilege_url role_privilege_privilege_url
        FROM sys_user u
            INNER JOIN sys_user_role ur on u.id = ur.user_id
            INNER JOIN sys_role r on ur.role_id = r.id
            INNER JOIN sys_role_privilege rp on rp.role_id = r.id
            INNER JOIN sys_privilege p on p.id = rp.privilege_id
    </select>

    <resultMap id="userRoleListMapSelect" extends="userMap" type="pers.congcong.myBatis2.pojos.SysUser">
        <collection property="sysRoleList"
                    fetchType="lazy"
                    select="pers.congcong.myBatis2.mappers.RoleMapper.selectRoleByUserId"
                    column="userId={id}"/>
    </resultMap>

    <select id="selectAllUserAndRoleSelect" resultMap="userRoleListMapSelect">
        SELECT
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time
        FROM sys_user u
        WHERE u.id = #{id}
    </select>




</mapper>
